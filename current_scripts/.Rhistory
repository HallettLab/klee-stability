ppt_plot <- ggplot(ppt_record, aes(x=Date_final, y=preceding12ppt)) +
geom_line() +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
xlab("") + ylab("12-mo. rainfall preceding June (mm)") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, labels = NULL)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
pdf("figure2.pdf", width = 7, height = 6, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
## Graph annual rainfall over time
ppt_plot <- ggplot(ppt_record, aes(x=Date_final, y=preceding12ppt)) +
geom_line(size = 0.75) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
xlab("") + ylab("12-mo. rainfall preceding June (mm)") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, labels = NULL)
## Graph total cover over time
tcov_drought <- ggplot(meancov, aes(x=Date_final, y=meancov, color = TREATMENT)) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
geom_line(size = 0.75) +
scale_color_scico_d(palette = "batlow", direction = -1) +
ylab("Total Cover") + xlab("") +
scale_x_date(breaks = june, labels = NULL) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
labs(col = "Treatment")
## Graph richness over time
richtime <- ggplot(meanannrich, aes(x=Date_final, y=meanrich, col=TREATMENT)) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
geom_line(size = 0.75) +
ylab("Richness") + xlab("") +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, date_labels = "%Y") +
theme(legend.position = "none") +
labs(col = "Treatment") + #change legend title
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pdf("figure2.pdf", width = 7, height = 6, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
## Graph annual rainfall over time
ppt_plot <- ggplot(ppt_record, aes(x=Date_final, y=preceding12ppt)) +
geom_line(size = 0.75) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
xlab("") + ylab("12-mo. rainfall prior to Jun (mm)") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, labels = NULL)
## Graph annual rainfall over time
ppt_plot <- ggplot(ppt_record, aes(x=Date_final, y=preceding12ppt)) +
geom_line(size = 0.75) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
xlab("") + ylab("12-mo rainfall prior to Jun (mm)") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, labels = NULL)
pdf("figure2.pdf", width = 7, height = 6, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
pdf("figure2.pdf", width = 8, height = 6, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
## Graph annual rainfall over time
ppt_plot <- ggplot(ppt_record, aes(x=Date_final, y=preceding12ppt)) +
geom_line(size = 0.75) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
xlab("") + ylab("12-mo rainfall* (mm)") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, labels = NULL)
## Graph total cover over time
tcov_drought <- ggplot(meancov, aes(x=Date_final, y=meancov, color = TREATMENT)) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
geom_line(size = 0.75) +
scale_color_scico_d(palette = "batlow", direction = -1) +
ylab("Total Cover") + xlab("") +
scale_x_date(breaks = june, labels = NULL) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
labs(col = "Treatment")
## Graph richness over time
richtime <- ggplot(meanannrich, aes(x=Date_final, y=meanrich, col=TREATMENT)) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
geom_line(size = 0.75) +
ylab("Richness") + xlab("") +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, date_labels = "%Y") +
theme(legend.position = "none") +
labs(col = "Treatment") + #change legend title
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pdf("figure2.pdf", width = 8, height = 6, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
## Graph annual rainfall over time
ppt_plot <- ggplot(ppt_record, aes(x=Date_final, y=preceding12ppt)) +
geom_line(size = 0.75) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
xlab("") + ylab("12-mo rainfall* mm") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, labels = NULL)
## Graph total cover over time
tcov_drought <- ggplot(meancov, aes(x=Date_final, y=meancov, color = TREATMENT)) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
geom_line(size = 0.75) +
scale_color_scico_d(palette = "batlow", direction = -1) +
ylab("Total Cover") + xlab("") +
scale_x_date(breaks = june, labels = NULL) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
labs(col = "Treatment")
## Graph richness over time
richtime <- ggplot(meanannrich, aes(x=Date_final, y=meanrich, col=TREATMENT)) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
geom_line(size = 0.75) +
ylab("Richness") + xlab("") +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, date_labels = "%Y") +
theme(legend.position = "none") +
labs(col = "Treatment") + #change legend title
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pdf("figure2.pdf", width = 8, height = 6, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
pdf("figure2.pdf", width = 7, height = 6.5, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
pdf("figure2.pdf", width = 8, height = 6.5, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
## Graph annual rainfall over time
ppt_plot <- ggplot(ppt_record, aes(x=Date_final, y=preceding12ppt)) +
geom_line(size = 0.75) +
geom_vline(data = ppt_date, mapping = aes(xintercept = Date_final), linetype = "dashed") +
xlab("") + ylab("12-mo Rainfall* mm") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
scale_x_date(breaks = june, labels = NULL)
pdf("figure2.pdf", width = 8, height = 6.5, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
pdf("figure2.pdf", width = 7.087, height = 6.5, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "right",
labels = "AUTO",
align = "v")
dev.off()
pdf("figure2.pdf", width = 7.087, height = 6.5, onefile = F)
ggarrange(ppt_plot, tcov_drought, richtime, ncol = 1, nrow = 3,
common.legend = TRUE,
legend = "bottom",
labels = "AUTO",
align = "v")
dev.off()
pdf("figure3.pdf", width = 7.087, height = 4, onefile = F)
ggarrange(sdreg, s,
ncol = 2, nrow = 1,
common.legend = TRUE,
legend = "bottom",
align = "hv",
labels = "AUTO")
dev.off()
pdf("figure4.pdf", width = 7.087, height = 10, onefile = F)
ggarrange(vrdreg, VRtrt,
psdreg, pdomspstab,
ridreg,prich,
ncol = 2, nrow = 3,
common.legend = TRUE,
legend = "bottom",
align = "hv",
labels = "AUTO")
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3.75, onefile = F)
plot_grid(fig5, leg, rel_heights = c(7,1), ncol = 1)
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3, onefile = F)
plot_grid(fig5, leg, rel_heights = c(7,1), ncol = 1)
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3, onefile = F)
plot_grid(fig5, leg, rel_heights = c(8,1), ncol = 1)
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3.2, onefile = F)
plot_grid(fig5, leg, rel_heights = c(8,1), ncol = 1)
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3.25, onefile = F)
plot_grid(fig5, leg, rel_heights = c(8,1), ncol = 1)
dev.off()
## extract the legend from Fig 4 for use in Fig 5
leg <- get_legend(VRtrt +
theme(legend.position = "bottom"))
pdf("figure5.pdf", width = 7.087, height = 3.25, onefile = F)
plot_grid(fig5, leg, rel_heights = c(10,1), ncol = 1)
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3.1, onefile = F)
plot_grid(fig5, leg, rel_heights = c(10,1), ncol = 1)
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3.1, onefile = F)
plot_grid(fig5, leg, rel_heights = c(5,1), ncol = 1)
dev.off()
pdf("figure5.pdf", width = 7.087, height = 3.1, onefile = F)
plot_grid(fig5, leg, rel_heights = c(5.5,1), ncol = 1)
dev.off()
library(tidyverse)
library(piecewiseSEM)
library(multcompView)
library(lme4)
library(GGally)
library(car)
## Check for correlation; VIF; and multicolinearity
## with all data
ggpairs(dmw10,
columns = 7:9,
upper = list(continuous = "cor"))
ggsave("corrmatrixall.png", height = 6, width = 8)
## then with cows model
ggpairs(dmw10,
columns = 7:9,
upper = list(continuous = "cor"),
mapping = aes(color = cows),
title = "Cattle")
## then with mesoherbivores
ggpairs(dmw10,
columns = 7:9,
upper = list(continuous = "cor"),
mapping = aes(color = wildlife),
title = "Wild Mesoherbivores")
## change herbivore columns to numeric. It is currently coded as a factor; have to change
## to character first then numeric otherwise it changes the 0 & 1 to 1 & 2
dmw10$cows <- as.character(dmw10$cows)
dmw10$cows <- as.numeric(dmw10$cows)
dmw10$mega <- as.character(dmw10$mega)
dmw10$mega <- as.numeric(dmw10$mega)
dmw10$wildlife <- as.character(dmw10$wildlife)
dmw10$wildlife <- as.numeric(dmw10$wildlife)
## model comparing cows to no cows
cows_psem <- psem(
lm(stability~Dscore+cows + classicVR + mean_popst + richness , data=dmw10),
## removed block as a random effect from this model as it had a variance of 0
## it was raising issues about singularity when it stayed in.
lmer(classicVR~Dscore+cows + (1|BLOCK), data = dmw10),
lmer(mean_popst~Dscore+cows + (1|BLOCK), data = dmw10),
lmer(richness~Dscore+cows + (1|BLOCK), data = dmw10),
data = dmw10
)
summary(cows_psem)
## Cows: with richness -> syynchrony pathway
cows_psem_w <- psem(
lm(stability~Dscore+cows + classicVR + mean_popst + richness , data=dmw10),
## removed block as a random effect from this model as it had a variance of 0
## it was raising issues about singularity when it stayed in.
lmer(classicVR~Dscore+cows+richness + (1|BLOCK), data = dmw10),
lmer(mean_popst~Dscore+cows + (1|BLOCK), data = dmw10),
lmer(richness~Dscore+cows + (1|BLOCK), data = dmw10),
data = dmw10
)
summary(cows_psem_w)
summary(cows_psem_w)
source("finalprep_postcalcs.R")
library(tidyverse)
library(piecewiseSEM)
library(multcompView)
library(lme4)
library(GGally)
library(car)
source("finalprep_postcalcs.R")
library(tidyverse)
library(piecewiseSEM)
library(multcompView)
library(lme4)
library(GGally)
library(car)
## Check for correlation; VIF; and multicolinearity
## with all data
ggpairs(dmw10,
columns = 7:9,
upper = list(continuous = "cor"))
vif(lm(stability~Dscore+cows + classicVR + mean_popst + richness , data=dmw10))
vif(lmer(classicVR~Dscore+cows+richness + (1|BLOCK), data = dmw10))
vif(lmer(mean_popst~Dscore+cows + (1|BLOCK), data = dmw10))
vif(lmer(richness~Dscore+cows + (1|BLOCK), data = dmw10))
dmw10$cows <- as.character(dmw10$cows)
dmw10$cows <- as.numeric(dmw10$cows)
dmw10$mega <- as.character(dmw10$mega)
dmw10$mega <- as.numeric(dmw10$mega)
dmw10$wildlife <- as.character(dmw10$wildlife)
dmw10$wildlife <- as.numeric(dmw10$wildlife)
## Cows: with richness -> syynchrony pathway
cows_psem_w <- psem(
lm(stability~Dscore+cows + classicVR + mean_popst + richness , data=dmw10),
## removed block as a random effect from this model as it had a variance of 0
## it was raising issues about singularity when it stayed in.
lmer(classicVR~Dscore+cows+richness + (1|BLOCK), data = dmw10),
lmer(mean_popst~Dscore+cows + (1|BLOCK), data = dmw10),
lmer(richness~Dscore+cows + (1|BLOCK), data = dmw10),
data = dmw10
)
summary(cows_psem_w)
## Mega: with richness -> synchrony pathway
mega_psem_w <- psem(
lm(stability~Dscore+mega + classicVR + mean_popst + richness , data=dmw10),
## removed block as a random effect from this model as it had a variance of 0
## it was raising issues about singularity when it stayed in.
lmer(classicVR~Dscore+mega+richness + (1|BLOCK), data = dmw10),
lmer(mean_popst~Dscore+mega + (1|BLOCK), data = dmw10),
lmer(richness~Dscore+mega + (1|BLOCK), data = dmw10),
data = dmw10
)
summary(mega_psem_w)
vif(lm(stability~Dscore+mega + classicVR + mean_popst + richness , data=dmw10))
vif(lmer(classicVR~Dscore+mega+richness + (1|BLOCK), data = dmw10))
vif(lmer(mean_popst~Dscore+mega + (1|BLOCK), data = dmw10))
vif(lmer(richness~Dscore+mega + (1|BLOCK), data = dmw10))
## Meso: with richness -> synchrony pathway
meso_psem_w <- psem(
lm(stability~Dscore+wildlife + classicVR + mean_popst + richness , data=dmw10),
## removed block as a random effect from this model as it had a variance of 0
## it was raising issues about singularity when it stayed in.
lmer(classicVR~Dscore+wildlife+richness + (1|BLOCK), data = dmw10),
lmer(mean_popst~Dscore+wildlife + (1|BLOCK), data = dmw10),
lmer(richness~Dscore+wildlife + (1|BLOCK), data = dmw10),
data = dmw10
)
summary(meso_psem_w)
summary(cows_psem_w)
summary(mega_psem_w)
vif(lm(stability~Dscore+wildlife + classicVR + mean_popst + richness , data=dmw10))
vif(lmer(classicVR~Dscore+wildlife+richness + (1|BLOCK), data = dmw10))
vif(lmer(mean_popst~Dscore+wildlife + (1|BLOCK), data = dmw10))
vif(lmer(richness~Dscore+wildlife + (1|BLOCK), data = dmw10))
summary(meso_psem_w)
View(drought_record)
## load packages
library(tidyverse)
library(lme4)
library(MuMIn)
## MODEL FOR FIGURE 4B ##
## how is the variance ratio (10 year) predicted by drought & herbivory?
fitdrcvr <- lmer(classicVR~Dscore+cows+wildlife+mega + (1|BLOCK) + (1|Unique_ID), data = dmw10, na.action = "na.fail")
dredge(fitdrcvr)
## MODEL for FIGURE 3A ##
## how is stability predicted by varying groups of herbivores?
fitsth <- lmer(stability~cows+wildlife+mega + (1|BLOCK), data = stability_mechanisms, na.action = "na.fail")
dredge(fitsth)
## MODEL FOR FIGURE 3B ##
### Do drought score & herbivore treatment predict stability or mechanisms?
fitdrst <- lmer(stability~Dscore+cows+wildlife+mega + (1|BLOCK) + (1|Unique_ID), data = dmw10, na.action = "na.fail")
dredge(fitdrst)
## MODEL for FIGURE 3A ##
## how is stability predicted by varying groups of herbivores?
fitsth <- lmer(stability~cows+wildlife+mega + (1|BLOCK), data = stability_mechanisms, na.action = "na.fail")
dredge(fitsth)
## MODEL FOR FIGURE 4D ##
## how is population stability (10 year) predicted by drought & herbivory?
fitdrps <- lmer(mean_popst~Dscore+cows+wildlife+mega + (1|BLOCK) + (1|Unique_ID), data = dmw10, na.action = "na.fail")
dredge(fitdrps)
library(tidyverse)
library(scico)
library(ggpubr)
theme_set(theme_classic()) #set the theme
## Figure Sb: Mean Pin Hits and Variance of total cover
#graph the mean variance by treatment
v <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_var)) +
geom_point(size=4) +
geom_errorbar(aes(ymin = mean_var-SE_var, ymax = mean_var+SE_var), width=0.25) +
ylab("Temporal Variance") + xlab("") +
theme(text = element_text(size = 16)) #change font size
#graph the mean total pin hits by treatment
b <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_bio)) +
geom_point(size=4) +
geom_errorbar(aes(ymin=mean_bio-SE_bio, ymax=mean_bio+SE_bio), width = 0.2) + #include standard error bars
ylab("Total Cover (Pin Hits)") + xlab("Treatment") +
theme(text = element_text(size = 16)) #change font size
## visualize mean stability & standard error
s <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_st)) +
geom_point(size=4) +
geom_errorbar(aes(ymin = mean_st-SE_st, ymax=mean_st+SE_st), width = 0.2) + #add standard error bars
ylab("Stability (mean/sd)") + xlab("") + #label axes
theme(text = element_text(size = 16)) #change font size
## plot 3 panel figure of stability, total pin hits, and temporal variance
ggarrange(b, v,
labels = "AUTO",
ncol = 2, nrow = 1,
align = "hv")
# Figure Sb: Mean Pin Hits and Variance of total cover
#graph the mean variance by treatment
v <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_var)) +
geom_point(size=4) +
geom_errorbar(aes(ymin = mean_var-SE_var, ymax = mean_var+SE_var), width=0.25) +
ylab("Temporal Variance") + xlab("") +
theme(text = element_text(size = 16)) #change font size
#graph the mean total pin hits by treatment
b <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_bio)) +
geom_point(size=4) +
geom_errorbar(aes(ymin=mean_bio-SE_bio, ymax=mean_bio+SE_bio), width = 0.2) + #include standard error bars
ylab("Total Cover (Pin Hits)") + xlab("Treatment") +
theme(text = element_text(size = 16)) #change font size
## plot 3 panel figure of stability, total pin hits, and temporal variance
ggarrange(b, v,
labels = "AUTO",
ncol = 2, nrow = 1,
align = "hv")
ggsave("figures6.png", height = 3.5, width = 6)
ggsave("figures6.png", height = 3, width = 6)
#graph the mean total pin hits by treatment
b <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_bio)) +
geom_point(size=4) +
geom_errorbar(aes(ymin=mean_bio-SE_bio, ymax=mean_bio+SE_bio), width = 0.2) + #include standard error bars
ylab("Total Cover") + xlab("Treatment") +
theme(text = element_text(size = 16)) #change font size
## plot 3 panel figure of stability, total pin hits, and temporal variance
ggarrange(b, v,
labels = "AUTO",
ncol = 2, nrow = 1,
align = "hv")
ggsave("figures6.png", height = 3, width = 6)
## Figure Sb: Mean Pin Hits and Variance of total cover
#graph the mean variance by treatment
v <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_var)) +
geom_point(size=4) +
geom_errorbar(aes(ymin = mean_var-SE_var, ymax = mean_var+SE_var), width=0.25) +
ylab("Temporal Variance") + xlab("") +
theme(text = element_text(size = 12)) #change font size
#graph the mean total pin hits by treatment
b <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_bio)) +
geom_point(size=4) +
geom_errorbar(aes(ymin=mean_bio-SE_bio, ymax=mean_bio+SE_bio), width = 0.2) + #include standard error bars
ylab("Total Cover") + xlab("Treatment") +
theme(text = element_text(size = 12)) #change font size
## plot 3 panel figure of stability, total pin hits, and temporal variance
ggarrange(b, v,
labels = "AUTO",
ncol = 2, nrow = 1,
align = "hv")
ggsave("figures6.png", height = 3, width = 6)
## Figure Sb: Mean Pin Hits and Variance of total cover
#graph the mean variance by treatment
v <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_var)) +
geom_point(size=3) +
geom_errorbar(aes(ymin = mean_var-SE_var, ymax = mean_var+SE_var), width=0.25) +
ylab("Temporal Variance") + xlab("") +
theme(text = element_text(size = 12)) #change font size
#graph the mean total pin hits by treatment
b <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_bio)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=mean_bio-SE_bio, ymax=mean_bio+SE_bio), width = 0.2) + #include standard error bars
ylab("Total Cover") + xlab("Treatment") +
theme(text = element_text(size = 12)) #change font size
## plot 3 panel figure of stability, total pin hits, and temporal variance
ggarrange(b, v,
labels = "AUTO",
ncol = 2, nrow = 1,
align = "hv")
ggsave("figures6.png", height = 3, width = 6)
ggsave("figures6.png", height = 2.75, width = 5.75)
## Figure Sb: Mean Pin Hits and Variance of total cover
#graph the mean variance by treatment
v <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_var)) +
geom_point(size=3) +
geom_errorbar(aes(ymin = mean_var-SE_var, ymax = mean_var+SE_var), width=0.25) +
ylab("Temporal Variance") + xlab("Treatment") +
theme(text = element_text(size = 12)) #change font size
#graph the mean total pin hits by treatment
b <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_bio)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=mean_bio-SE_bio, ymax=mean_bio+SE_bio), width = 0.2) + #include standard error bars
ylab("Total Cover") + xlab("Treatment") +
theme(text = element_text(size = 12)) #change font size
## plot 3 panel figure of stability, total pin hits, and temporal variance
ggarrange(b, v,
labels = "AUTO",
ncol = 2, nrow = 1,
align = "hv")
ggsave("figures6.png", height = 2.75, width = 5.75)
