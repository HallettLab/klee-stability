theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(0,4.2), , ylim = c(2.4, 12.6)) +
geom_vline(xintercept = 1, linetype = "dashed")
vrall <- ggplot(meanstab_mech, aes(x=mean_classicVR, y=mean_st)) +
geom_vline(xintercept = 1, linetype = "dashed") +
# geom_errorbar(aes(ymin = mean_st-SE_st, ymax=mean_st+SE_st), width = 0.06) +
#geom_errorbarh(aes(xmin = mean_classicVR-SEclassicVR, xmax=mean_classicVR+SEclassicVR), height = 0.1) + #add standard error bars
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
ylab("Stability (22yr)") + xlab("Variance Ratio (22yr)") +
geom_smooth(method = "lm", se = FALSE, fullrange = T, color = "black", size = 0.75)+
theme(text = element_text(size = 12))  + #change font sizes
#annotate("text", x =1.07, y=3.3, label = "synchronous", size = 4, angle='90', fontface = 'italic') +
#annotate("text", x =0.9, y=3.3, label = "asynchronous", size = 4, angle='90',fontface = 'italic') +
theme(legend.position = "none") +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(0,4.2), , ylim = c(2.4, 12.6))
## POP STABILITY
ps10 <- ggplot(mwfigs10, aes(x=popstab, y=stability)) +
geom_point() +
xlab("Pop Stability (10yr)") + ylab("Stability (10yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(0,5.5), ylim = c(2.4, 12.6))
ps5 <- ggplot(mwfigs5, aes(x=popstab, y=stability)) +
geom_point() +
xlab("Pop. Stability (5yr)") + ylab("Stability (5yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10))+
coord_cartesian(xlim = c(0,5.5), ylim = c(2.4, 12.6))
ps15 <- ggplot(mwfigs15, aes(x=popstab, y=stability)) +
geom_point() +
xlab("Pop. Stability (15yr)") + ylab("Stability (15yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10))+
coord_cartesian(xlim = c(0,5.5), ylim = c(2.4, 12.6))
psall <- ggplot(meanstab_mech, aes(x=avgpopstab, y=mean_st)) +
geom_smooth(method = "lm", se = FALSE, fullrange = T, color = "black", size = 0.75) +
#geom_errorbar(aes(ymin = mean_st-SE_st, ymax=mean_st+SE_st), width = 0.06) +
#geom_errorbarh(aes(xmin = avgpopstab-SEpopstab, xmax=avgpopstab+SEpopstab), height = 0.1) + #add standard error bars
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +  ylab("Stability (22yr)") + xlab("Pop. Stability (22yr)") +
theme(text = element_text(size = 10)) + #change font sizes
theme(legend.position = "none") +
coord_cartesian(xlim = c(0,5.5), ylim = c(2.4, 12.6))
## RICHNESS
r10 <- ggplot(mwfigs10, aes(x=richness, y=stability)) +
geom_point() +
xlab("Sp. Richness (10yr)") + ylab("Stability (10yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10))+
coord_cartesian(xlim = c(18,23.5), ylim = c(2.4, 12.6))
r5 <- ggplot(mwfigs5, aes(x=richness, y=stability)) +
geom_point() +
xlab("Sp. Richness (5yr)") + ylab("Stability (5yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(18,23.5), ylim = c(2.4, 12.6))
r15 <- ggplot(mwfigs15, aes(x=richness, y=stability)) +
geom_point() +
xlab("Sp. Richness (15yr)") + ylab("Stability (15yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(18,23.5), ylim = c(2.4, 12.6))
rall <- ggplot(meanstab_mech, aes(x=mean_rich, y=mean_st)) +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
scale_fill_scico_d(palette = "batlow", direction = -1) +  ylab("Stability") + xlab("Species Richness") +
theme(text = element_text(size = 10))  + #change font sizes
theme(legend.position = "none") +
coord_cartesian(xlim = c(18,23.5), ylim = c(2.4, 12.6))
ggarrange(vr5, vr10, vr15, vrall,
ps5, ps10, ps15, psall,
r5, r10, r15, rall,
ncol = 4,
nrow = 3,
common.legend = TRUE,
legend = "bottom",
labels = "AUTO")
ggsave("stab-mechall-timescale.png", width= 7.087, height = 8.8)
ggsave("stab-mechall-timescale.png", width= 7.087, height = 8.5)
## POP STABILITY
ps10 <- ggplot(mwfigs10, aes(x=popstab, y=stability)) +
geom_point() +
xlab("Pop. Stability (10yr)") + ylab("Stability (10yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(0,5.5), ylim = c(2.4, 12.6))
vrall <- ggplot(meanstab_mech, aes(x=mean_classicVR, y=mean_st)) +
geom_vline(xintercept = 1, linetype = "dashed") +
# geom_errorbar(aes(ymin = mean_st-SE_st, ymax=mean_st+SE_st), width = 0.06) +
#geom_errorbarh(aes(xmin = mean_classicVR-SEclassicVR, xmax=mean_classicVR+SEclassicVR), height = 0.1) + #add standard error bars
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
ylab("Stability (22yr)") + xlab("Variance Ratio (22yr)") +
geom_smooth(method = "lm", se = FALSE, fullrange = T, color = "black", size = 0.75)+
theme(text = element_text(size = 12))  + #change font sizes
#annotate("text", x =1.07, y=3.3, label = "synchronous", size = 4, angle='90', fontface = 'italic') +
#annotate("text", x =0.9, y=3.3, label = "asynchronous", size = 4, angle='90',fontface = 'italic') +
theme(legend.position = "none") +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(0,4.2), ylim = c(2.4, 12.6))
vr5 <- ggplot(mwfigs5, aes(x=classicVR, y=stability)) +
geom_point() +
xlab("Variance Ratio (5yr)") + ylab("Stability (5yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
coord_cartesian(xlim = c(0,4.2), ylim = c(2.4, 12.6)) +
geom_vline(xintercept = 1, linetype = "dashed")
vr10 <- ggplot(mwfigs10, aes(x=classicVR, y=stability)) +
geom_point() +
xlab("Variance Ratio (10yr)") + ylab("Stability (10yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10)) +
geom_vline(xintercept = 1, linetype = "dashed") +
coord_cartesian(xlim = c(0,4.2), ylim = c(2.4, 12.6))
ggarrange(vr5, vr10, vr15, vrall,
ps5, ps10, ps15, psall,
r5, r10, r15, rall,
ncol = 4,
nrow = 3,
common.legend = TRUE,
legend = "bottom",
labels = "AUTO")
ggsave("stab-mechall-timescale.png", width= 7.087, height = 8.5)
rall <- ggplot(meanstab_mech, aes(x=mean_rich, y=mean_st)) +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
ylab("Stability") + xlab("Sp. Richness (22yr)") +
theme(text = element_text(size = 10))  + #change font sizes
theme(legend.position = "none") +
coord_cartesian(xlim = c(18,23.5), ylim = c(2.4, 12.6))
ggarrange(vr5, vr10, vr15, vrall,
ps5, ps10, ps15, psall,
r5, r10, r15, rall,
ncol = 4,
nrow = 3,
common.legend = TRUE,
legend = "bottom",
labels = "AUTO")
ggsave("stab-mechall-timescale.png", width= 7.087, height = 8.5)
library(tidyverse)
library(lme4)
library(MuMIn)
plot(stability_mechanisms$classicVR)
## MODEL for FIGURE 3A ##
## how is stability predicted by varying groups of herbivores?
fitsth <- lmer(stability~cows+wildlife+mega + (1|BLOCK), data = stability_mechanisms, na.action = "na.fail")
dredge(fitsth)
## best fitting, most parsimonious model for stability
fitsth_best <- lmer(stability~cows + (1|BLOCK), data = stability_mechanisms, na.action = "na.fail")
summary(fitsth_best)
plot(fitsth_best)
ggplot(data.frame(eta=predict(fitsth_best,type="link"),pearson=residuals(fitsth_best,type="pearson")),
aes(x=eta,y=pearson)) +
geom_point() +
theme_bw()
ggplot(data.frame(x1=fitsth_best$x1,pearson=residuals(gmm,type="pearson")),
aes(x=x1,y=pearson)) +
geom_point() +
theme_bw()
ggplot(data.frame(x1=fitsth_best$cows,pearson=residuals(gmm,type="pearson")),
aes(x=x1,y=pearson)) +
geom_point() +
theme_bw()
ggplot(data.frame(x1=stability_mechanisms$cows,pearson=residuals(gmm,type="pearson")),
aes(x=x1,y=pearson)) +
geom_point() +
theme_bw()
ggplot(data.frame(x1=stability_mechanisms$cows,pearson=residuals(fitsth_best,type="pearson")),
aes(x=x1,y=pearson)) +
geom_point() +
theme_bw()
qqnorm(residuals(fitsth_best))
## interclass correlation
r1Var <- as.numeric(VarCorr(fitsth_best)[["g1"]])
residVar <- attr(VarCorr(fitsth_best), "sc")^2
r1Var
residVar
r1Var / (r1Var + residVar)
residVar
## interclass correlation
r1Var <- as.numeric(VarCorr(fitsth_best)[["cows"]])
residVar <- attr(VarCorr(fitsth_best), "sc")^2
r1Var
residVar
r1Var / (r1Var + residVar)
View(fitsth_best)
summary(fitsth_best)
## interclass correlation
r1Var <- as.numeric(VarCorr(fitsth_best)[["cows1"]])
residVar <- attr(VarCorr(fitsth_best), "sc")^2
r1Var
residVar
r1Var / (r1Var + residVar)
fitsth_best
## the points are concentrated at the ends of the figure... why??
## could this be a result of the categorical variable for herbivory?
## does the variance look constant across the fitted range?
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16,xlab="Fitted values",ylab="Standardised residuals")
## the points are concentrated at the ends of the figure... why??
## could this be a result of the categorical variable for herbivory?
## does the variance look constant across the fitted range?
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,xlab="Fitted values",ylab="Standardised residuals")
## the points are concentrated at the ends of the figure... why??
## could this be a result of the categorical variable for herbivory?
## does the variance look constant across the fitted range?
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.), xlab="Fitted values",ylab="Standardised residuals")
dev.off()
#Default plot of standardised residuals versus fitted
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
#Default plot of standardised residuals versus fitted
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, col=stability_mechanisms$BLOCK, xlab="Fitted values", ylab="Standardised residuals")
#Default plot of standardised residuals versus fitted
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, col=data$BLOCK, xlab="Fitted values", ylab="Standardised residuals")
View(stability_mechanisms)
#Plotting the residuals against each explanatory variable
plot(fitsth_best, resid(., scaled=TRUE) ~ cows, abline = 0,pch=16,col=cols[stability_mechanisms$BLOCK],xlab="Cows",ylab="Standardised residuals")
#Plotting the residuals against each explanatory variable
plot(fitsth_best, resid(., scaled=TRUE) ~ cows, abline = 0,pch=16,xlab="Cows",ylab="Standardised residuals")
ggplot(data.frame(x1=stability_mechanisms$cows,pearson=residuals(fitsth_best,type="pearson")),
aes(x=x1,y=pearson)) +
geom_point() +
theme_bw()
#We can use a default plot of the standardised residuals versus fitted
#But add | <random effect> to see it per level of the random effect
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.)| BLOCK, abline = 0,pch=16,xlab="Fitted values",ylab="Standardised residuals")
## Normality of Residuals
qqnorm(resid(fitsth_best),pch=16)
## Normality of Residuals
dev.off()
qqnorm(resid(fitsth_best),pch=16)
qqnorm(resid(fitsth_best))
qqline(resid(fitsth_best))
#Calculate leverage
lev<-hat(model.matrix(fitsth_best))
#Plot leverage against standardised residuals
plot(resid(model,type="pearson")~lev,las=1,ylab="Standardised residuals",xlab="Leverage")
#Plot leverage against standardised residuals
plot(resid(fitsth_best,type="pearson")~lev,las=1,ylab="Standardised residuals",xlab="Leverage")
#Calculate Cook's Distance
cd<-cooks.distance(fitsth_best)
#Plot leverage and Cook's distance together
par(mfrow=c(1,1))
plot(lev,pch=16,col="red",ylim=c(0,1.2),las=1,ylab="Leverage/Cook's distance value")
points(cd,pch=17,col="blue")
points(x=150,y=1.1,pch=16,col="red")
points(x=150,y=0.9,pch=17,col="blue")
text(x=155,y=1.1,"Leverage",adj=c(0,0.5))
text(x=155,y=0.9,"Cook's distance",adj=c(0,0.5))
hist(as.vector(unlist(ranef(fitsth_best)$BLOCK)),breaks=seq(-2,1,0.25),col=cols[1],border=NA)
dev.off()
hist(as.vector(unlist(ranef(fitsth_best)$BLOCK)),breaks=seq(-2,1,0.25),col=cols[1],border=NA)
hist(as.vector(unlist(ranef(fitsth_best)$BLOCK)),breaks=seq(-2,1,0.25),border=NA)
lattice::dotplot(ranef(fitsth_best, condVar=TRUE))
## model diagnostics
dev.off()
#Default plot of standardised residuals versus fitted
plot(fitdrst_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
## best fitting model for 10yr stability
fitdrst_best <- lmer(stability~Dscore+cows+wildlife + (1|BLOCK) + (1|Unique_ID), data = dmw10, na.action = "na.fail")
#Default plot of standardised residuals versus fitted
plot(fitdrst_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
ggplot(data.frame(x1=stability_mechanisms$Dscore,pearson=residuals(fitdrst_best,type="pearson")),
aes(x=x1,y=pearson)) +
geom_point() +
theme_bw()
#Plotting the residuals against each explanatory variable
plot(fitdrst_best, resid(., scaled=TRUE) ~ Dscore, abline = 0,pch=16,xlab="Cows",ylab="Standardised residuals")
#Plotting the residuals against each explanatory variable
plot(fitdrst_best, resid(., scaled=TRUE) ~ Dscore, abline = 0,pch=16,xlab="Drought Score",ylab="Standardised residuals")
qqnorm(resid(fitdrst_best))
qqline(resid(fitdrst_best))
## best fitting, most parsimonious model for stability
fitsth_best <- lmer(stability~cows + (1|BLOCK), data = stability_mechanisms, na.action = "na.fail")
#Default plot of standardised residuals versus fitted
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
ggplot(data.frame(x1=stability_mechanisms$cows,pearson=residuals(fitsth_best,type="pearson")),
aes(x=x1,y=pearson)) +
geom_point() +
theme_bw()
qqnorm(resid(fitsth_best))
qqline(resid(fitsth_best))
#We can use a default plot of the standardised residuals versus fitted
#But add | <random effect> to see it per level of the random effect
plot(fitsth_best, resid(., scaled=TRUE) ~ fitted(.)| BLOCK, abline = 0,pch=16,xlab="Fitted values",ylab="Standardised residuals")
#Calculate leverage
lev<-hat(model.matrix(fitsth_best))
#Plot leverage against standardised residuals
plot(resid(fitsth_best,type="pearson")~lev,las=1,ylab="Standardised residuals",xlab="Leverage")
## best fitting model for 10yr stability
fitdrst_best <- lmer(stability~Dscore+cows+wildlife + (1|BLOCK) + (1|Unique_ID), data = dmw10, na.action = "na.fail")
#Default plot of standardised residuals versus fitted
plot(fitdrst_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
qqnorm(resid(fitdrst_best))
qqline(resid(fitdrst_best))
## Check Drought Score and Stability at timescales
## 5, 10, and 15 year windows
yr10 <- ggplot(mwfigs10, aes(x=Dscore, y=stability)) +
geom_point() +
xlab("Drought Score (10yr)") + ylab("Stability (10yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10))
yr5 <- ggplot(mwfigs5, aes(x=Dscore, y=stability)) +
geom_point() +
ylab("Stability (5yr)") + xlab("Drought Score (5yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10))
yr15 <- ggplot(mwfigs15, aes(x=Dscore, y=stability)) +
geom_point() +
ylab("Stability (15yr)") + xlab("Drought Score (15yr)") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 0.75) +
theme(legend.text = element_text(size=10)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=10)) +
theme(text = element_text(size = 10))
ggarrange(yr5, yr10, yr15,
ncol = 3,
common.legend = TRUE,
legend = "bottom",
labels = "AUTO")
ggsave("d-timescale.png", width= 7.087, height = 3.1)
#Default plot of standardised residuals versus fitted
plot(fitdrst_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
## Normality of Residuals
dev.off()
qqnorm(resid(fitdrst_best))
qqline(resid(fitdrst_best))
#Default plot of standardised residuals versus fitted
plot(fitcvr_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
fitcvr_best <- lmer(classicVR~cows+mega + (1|BLOCK), data = stability_mechanisms, na.action = "na.fail")
#Default plot of standardised residuals versus fitted
plot(fitcvr_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
## Normality of Residuals
dev.off()
qqnorm(resid(fitcvr_best))
qqline(resid(fitcvr_best))
#Default plot of standardised residuals versus fitted
plot(fitdrcvr_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
qqnorm(resid(fitdrcvr_best))
qqline(resid(fitdrcvr_best))
#Default plot of standardised residuals versus fitted
plot(fitdpsh_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
fitdpsh_best <- lmer(meanpopstab~1 + (1|BLOCK), data = stability_mechanisms, na.action = "na.fail")
summary(fitdpsh_best)
## model diagnostics
dev.off()
#Default plot of standardised residuals versus fitted
plot(fitdpsh_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
qqnorm(resid(fitdpsh_best))
qqline(resid(fitdpsh_best))
#Default plot of standardised residuals versus fitted
plot(fitdrps_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
fitdrps_best <- lmer(mean_popst~cows + (1|BLOCK) + (1|Unique_ID), data = dmw10, na.action = "na.fail")
#Default plot of standardised residuals versus fitted
plot(fitdrps_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
qqnorm(resid(fitdrps_best))
qqline(resid(fitdrps_best))
#Default plot of standardised residuals versus fitted
plot(fitrih_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
fitrih_best <- lm(meanrich~wildlife, data = stability_mechanisms, na.action = "na.fail")
#Default plot of standardised residuals versus fitted
plot(fitrih_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
## Normality of Residuals
dev.off()
#Default plot of standardised residuals versus fitted
plot(fitrih_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
plot(fitrih_best)
qqnorm(resid(fitrih_best))
qqline(resid(fitrih_best))
#Default plot of standardised residuals versus fitted
plot(fitdrri_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
fitdrri_best <- lmer(richness~Dscore+wildlife + (1|BLOCK) + (1|Unique_ID), data = dmw10, na.action = "na.fail")
#Default plot of standardised residuals versus fitted
plot(fitdrri_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
qqnorm(resid(fitdrri_best))
qqline(resid(fitdrri_best))
#Default plot of standardised residuals versus fitted
plot(fitdrri_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
plot(fitdrri_best)
## Normality of Residuals
dev.off()
qqnorm(resid(fitdrri_best))
qqline(resid(fitdrri_best))
#Default plot of standardised residuals versus fitted
plot(fitstabmech_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
qqnorm(resid(fitstabmech_best))
qqline(resid(fitstabmech_best))
#Default plot of standardised residuals versus fitted
plot(fitstabmech_best, resid(., scaled=TRUE) ~ fitted(.), abline = 0,pch=16, xlab="Fitted values", ylab="Standardised residuals")
qqnorm(resid(fitstabmech_best))
qqline(resid(fitstabmech_best))
