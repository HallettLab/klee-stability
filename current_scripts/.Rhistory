}
## clean this up and get just one row for each species.
trans_blk <- transitions_blk %>%
group_by(species) %>%
summarise(trans = median(trans_occurs)) %>%
filter(trans == 1)
blk_transitions <- avg_blk_long %>%
filter(species %in% trans_blk$species)
ggplot(blk_transitions, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
## SEV Blue field ####
blu_species <- unique(avg_blu_long$species) ## create vector of unique species
## create empty dataframe
transitions_blu <- data.frame(matrix(ncol=5, nrow=0))
colnames(transitions_blu) <- c("rainfall", "species", "category_name", "category_percent", "trans_occurs")
## use a for loop to iterate over each unique species
for (i in 1:length(blu_species)) {
temp_sp <- avg_blu_long %>%
filter(species == blu_species[i])
## find unique categories
catnum <- unique(temp_sp$category_name)
## evaluate whether the number of categories is 1 (no transition, coded as 0) or greater than 1 (transition, coded as 1)
temp <- temp_sp %>%
mutate(trans_occurs = ifelse(length(catnum) > 1, 1, 0))
## append to the empty dataframe
transitions_blu <- rbind(transitions_blu, temp)
}
## clean this up and get just one row for each species.
trans_blu <- transitions_blu %>%
group_by(species) %>%
summarise(trans = median(trans_occurs)) %>%
filter(trans == 1)
blu_transitions <- avg_blu_long %>%
filter(species %in% trans_blu$species)
ggplot(blu_transitions, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggplot(blk_transitions, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggsave("blk_trans_cats.png", height = 6, width = 8)
ggplot(blu_transitions, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggsave("blu_trans_cats.png", height = 6, width = 8)
View(Edge_black)
# Visualize Category Trends ####
## Black field first
ggplot(Edge_black, aes(x=combo)) +
geom_histogram() +
facet_wrap(~rainfall)
# Visualize Category Trends ####
## Black field first
ggplot(Edge_black, aes(x=combo)) +
geom_bar() +
facet_wrap(~rainfall)
# Visualize Category Trends ####
## Black field first
ggplot(Edge_black, aes(x=nickname)) +
geom_bar() +
facet_wrap(~rainfall)
# Visualize Category Trends ####
## Black field first
ggplot(Edge_black, aes(x=rainfall)) +
geom_bar() +
facet_wrap(~nickname)
# Visualize Category Trends ####
## Black field first
ggplot(Edge_black, aes(x=rainfall)) +
geom_bar() +
facet_wrap(~nickname)
ggsave("blk_cats_rain.png", height = 4, width = 3)
ggsave("blk_cats_rain.png", height = 3.5, width = 3)
## Blue field
ggplot(Edge_blue, aes(x=rainfall)) +
geom_bar() +
facet_wrap(~nickname)
ggsave("blu_cats_rain.png", height = 3.5, width = 3)
sev <- dat %>%
filter(rainfall != "D")
View(sev)
## Rank sp by abundance ####
datrank = sev %>%
group_by(field, plot, subplot, rainfall) %>%
mutate(rank = rank(abundance, na.last = NA, ties.method = "average"), percrank = percent_rank(abundance))
x2<-na.omit(x)
## create a function to calculate standard error
calcSE<-function(x){
x2<-na.omit(x)
sd(x2)/sqrt(length(x2))
}
## set graphics theme
theme_set(theme_bw())
# Read in data ####
source("sev_edge_data_cleaning.R")
dat <- sev_edge_clean ## create new object
sev <- dat %>%
filter(rainfall != "D")
## Rank sp by abundance ####
datrank = sev %>%
group_by(field, plot, subplot, rainfall) %>%
mutate(rank = rank(abundance, na.last = NA, ties.method = "average"), percrank = percent_rank(abundance))
sort(unique(datrank$rank))
## Calc mean rank & yrs present ####
# mean rank percentile, sum number of years present, for each species in each plot.
categorydat <- datrank %>%
group_by(field, plot, subplot, rainfall, species) %>%
summarize(mean_rank = mean(percrank), # mean rank% cover for all 8 years (does not include zeros)
yrs_present = length(percrank), # number of years species was present = number of rows for Taxon
# (no zeros in working_coverdat dataset)
yrs_present_list = paste0("yr", as.character(year), collapse = ", "),
.groups = "keep")
# how many years per plot?
nyearsdat <- datrank %>%
group_by(field, plot, subplot, rainfall) %>%
summarize(n_years = length(unique(year)), .groups = "keep")
summary(nyearsdat)
## Create nicknames & categories ####
catdat <- categorydat %>%
merge(y = nyearsdat) %>%
mutate(persist_pct = yrs_present / n_years,
core_cat = case_when(persist_pct < 0.5 ~ "transient",
persist_pct >= 0.5 ~ "core"), # if present half of the time or more, core
core_cat = factor(core_cat, levels = c("transient", "core")),
dom_cat = case_when(mean_rank < 0.5 ~ "subordinate",
mean_rank >= 0.5 ~ "dominant"), # if, on average, more dominant than half of the spp in the plots, dominant
dom_cat = factor(dom_cat, levels = c("subordinate", "dominant"))) %>%
unite(combo, core_cat, dom_cat, remove = FALSE, sep = "_") %>%
merge(y = data.frame(combo = c("transient_subordinate", "transient_dominant", "core_subordinate", "core_dominant"),
nickname = c("TransSub", "TransDom", "CoreSub", "CoreDom")) ) %>%
mutate(nickname = factor(nickname, levels = c("CoreDom", "CoreSub", "TransDom", "TransSub"))) #%>%
## clean up environment
rm(list = c("categorydat", "datrank", "sev_edge_clean", "nyearsdat", "dat"))
## Separate dataframes by site ####
Edge_blue <- catdat %>%
filter(field == "EDGE_blue") %>%
mutate(unique_ID = paste(plot, subplot, rainfall,species, sep = "_"))
Edge_black <- catdat %>%
filter(field == "EDGE_black") %>%
mutate(unique_ID = paste(plot, subplot, rainfall,species, sep = "_"))
# Avg sp across rainfall trt ####
## For Edge_black field ####
avg_blk_rainfall <- Edge_black %>%
mutate(num_transsub = ifelse(nickname == "TransSub", 1, 0),
num_coredom = ifelse(nickname == "CoreDom", 1, 0),
num_coresub = ifelse(nickname == "CoreSub", 1, 0),
num_transdom = ifelse(nickname == "TransDom", 1, 0)) %>%
group_by(rainfall, species) %>%
summarise(perc_transsub = sum(num_transsub)/n(),
perc_coredom = sum(num_coredom)/n(),
perc_coresub = sum(num_coresub)/n(),
perc_transdom = sum(num_transdom)/n())
avg_blk_long <- avg_blk_rainfall %>%
pivot_longer(cols = perc_transsub:perc_transdom, names_to = "category_name", values_to = "category_percent") %>%
filter(category_percent > 0, species != "EMPTY")
## For Edge_blue field ####
avg_blu_rainfall <- Edge_blue %>%
mutate(num_transsub = ifelse(nickname == "TransSub", 1, 0),
num_coredom = ifelse(nickname == "CoreDom", 1, 0),
num_coresub = ifelse(nickname == "CoreSub", 1, 0),
num_transdom = ifelse(nickname == "TransDom", 1, 0)) %>%
group_by(rainfall, species) %>%
summarise(perc_transsub = sum(num_transsub)/n(),
perc_coredom = sum(num_coredom)/n(),
perc_coresub = sum(num_coresub)/n(),
perc_transdom = sum(num_transdom)/n())
avg_blu_long <- avg_blu_rainfall %>%
pivot_longer(cols = perc_transsub:perc_transdom, names_to = "category_name", values_to = "category_percent") %>%
filter(category_percent > 0, species != "EMPTY")
## Vis sp category patterns across rainfall trts ####
ggplot(avg_blk_long, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggsave("black_allsp_cats.png", height = 6, width = 8)
ggplot(avg_blu_long, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggplot(avg_blu_long, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggsave("blue_allsp_cats.png", height = 6, width = 8)
## SEV Black field ####
blk_species <- unique(avg_blk_long$species) ## create vector of unique species
## create empty dataframe
transitions_blk <- data.frame(matrix(ncol=5, nrow=0))
colnames(transitions_blk) <- c("rainfall", "species", "category_name", "category_percent", "trans_occurs")
## use a for loop to iterate over each unique species
for (i in 1:length(blk_species)) {
temp_sp <- avg_blk_long %>%
filter(species == blk_species[i])
## find unique categories
catnum <- unique(temp_sp$category_name)
## evaluate whether the number of categories is 1 (no transition, coded as 0) or greater than 1 (transition, coded as 1)
temp <- temp_sp %>%
mutate(trans_occurs = ifelse(length(catnum) > 1, 1, 0))
## append to the empty dataframe
transitions_blk <- rbind(transitions_blk, temp)
}
## clean this up and get just one row for each species.
trans_blk <- transitions_blk %>%
group_by(species) %>%
summarise(trans = median(trans_occurs)) %>%
filter(trans == 1)
blk_transitions <- avg_blk_long %>%
filter(species %in% trans_blk$species)
ggplot(blk_transitions, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggsave("blk_trans_cats.png", height = 6, width = 8)
## SEV Blue field ####
blu_species <- unique(avg_blu_long$species) ## create vector of unique species
## create empty dataframe
transitions_blu <- data.frame(matrix(ncol=5, nrow=0))
colnames(transitions_blu) <- c("rainfall", "species", "category_name", "category_percent", "trans_occurs")
## use a for loop to iterate over each unique species
for (i in 1:length(blu_species)) {
temp_sp <- avg_blu_long %>%
filter(species == blu_species[i])
## find unique categories
catnum <- unique(temp_sp$category_name)
## evaluate whether the number of categories is 1 (no transition, coded as 0) or greater than 1 (transition, coded as 1)
temp <- temp_sp %>%
mutate(trans_occurs = ifelse(length(catnum) > 1, 1, 0))
## append to the empty dataframe
transitions_blu <- rbind(transitions_blu, temp)
}
## clean this up and get just one row for each species.
trans_blu <- transitions_blu %>%
group_by(species) %>%
summarise(trans = median(trans_occurs)) %>%
filter(trans == 1)
blu_transitions <- avg_blu_long %>%
filter(species %in% trans_blu$species)
ggplot(blu_transitions, aes(x=rainfall, y=category_percent, color = category_name)) +
geom_point() +
facet_wrap(~species) +
ylab("Percent per Category") + xlab("Rainfall Treatment")
ggsave("blu_trans_cats.png", height = 6, width = 8)
# Visualize Category Trends ####
## Black field first
ggplot(Edge_black, aes(x=rainfall)) +
geom_bar() +
facet_wrap(~nickname)
ggsave("blk_cats_rain.png", height = 3.5, width = 3)
## Blue field
ggplot(Edge_blue, aes(x=rainfall)) +
geom_bar() +
facet_wrap(~nickname)
ggsave("blu_cats_rain.png", height = 3.5, width = 3)
# River plots ####
library(ggalluvial)
is_alluvia_form(as.data.frame(Edge_blk_rivdat), silent = TRUE)
C.sp <- as.data.frame(unique(Edge_blk_rivdat$species[Edge_blk_rivdat$rainfall == "C"]))
river_blk <-ggplot(Edge_black, aes(x=rainfall, stratum=combo, alluvium=species, fill=combo, label=combo))+
geom_flow(width=.5)+
#scale_x_discrete(expand = c(.1, .1))+
geom_stratum(alpha=.5, width=.5)+
geom_text(stat="stratum", size=0, min.y=3) #+
river_blk
View(Edge_black)
C.sp <- as.data.frame(unique(Edge_black$species[Edge_black$rainfall == "C"]))
colnames(C.sp) <- "species"
E.sp <- as.data.frame(unique(Edge_black$species[Edge_black$rainfall == "E"]))
colnames(E.sp) <- "species"
common.sp <- C.sp %>%
filter(species %in% E.sp$species)
Edge_blk_rivdat <- Edge_black %>%
select(rainfall, combo, unique_ID, species) %>%
filter(species %in% common.sp$species)
river_blk <-ggplot(Edge_blk_rivdat, aes(x=rainfall, stratum=combo, alluvium=species, fill=combo, label=combo))+
geom_flow(width=.5)+
#scale_x_discrete(expand = c(.1, .1))+
geom_stratum(alpha=.5, width=.5)+
geom_text(stat="stratum", size=0, min.y=3) #+
river_blk
str(Edge_black)
test <- Edge_black %>%
group_by(rainfall, species, nickname) %>%
summarise(sp.cat.tot = n())
View(test)
test <- Edge_black %>%
group_by(rainfall, species, nickname) %>%
summarise(sp.cat.tot = n()) %>%
mutate(percent_cat = sp.cat.tot/count(species))
View(avg_blk_rainfall)
avg_blk_rainfall <- Edge_black %>%
mutate(num_transsub = ifelse(nickname == "TransSub", 1, 0),
num_coredom = ifelse(nickname == "CoreDom", 1, 0),
num_coresub = ifelse(nickname == "CoreSub", 1, 0),
num_transdom = ifelse(nickname == "TransDom", 1, 0)) #%>%
## load packages
library(tidyverse)
library(lubridate)
library(scico)
library(ggpubr)
library(cowplot)
library(scico)
## read in data
source("finalprep_postcalcs.R")
setwd("~/Repositories/klee-stability/current_scripts")
## read in data
source("finalprep_postcalcs.R")
## Figure Settings ##
theme_set(theme_classic()) #set the theme
## Figure 3: Stability (full ts, 10yr)
s <- ggplot(meanstab_mech, aes(x=TREATMENT, y=mean_st)) +
geom_point(size=3) +
geom_errorbar(aes(ymin = mean_st-SE_st, ymax=mean_st+SE_st), width = 0.2) + #add standard error bars
ylab("Stability (all years)") + xlab("Herbivore Treatment") + #label axes
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12)) +
theme(legend.text = element_text(size=12)) +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=4) +
labs(fill = "Herbivore Treatment") +
scale_fill_scico_d(palette = "batlow", direction = -1)
sdreg <- ggplot(mwfigs10, aes(x=Dscore, y=stability)) +
geom_point() +
ylab("Stability (10 year)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.text = element_text(size=12)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12))
## modified Fig 3A for Truman
ggplot(mwfigs10, aes(x=Dscore, y=stability)) +
geom_point() +
ylab("Stability (10 year)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x, color = TREATMENT,
size = 1.25) +
theme(legend.text = element_text(size=12)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12))
## modified Fig 3A for Truman
ggplot(mwfigs10, aes(x=Dscore, y=stability, color = TREATMENT)) +
geom_point() +
ylab("Stability (10 year)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.text = element_text(size=12)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12))
## modified Fig 3A for Truman
ggplot(mwfigs10, aes(x=Dscore, y=stability, color = TREATMENT)) +
geom_point() +
ylab("Stability (10 year)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.text = element_text(size=12)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12)) +
guides(color = FALSE)
## modified Fig 3A for Truman
ggplot(mwfigs10, aes(x=Dscore, y=stability, color = TREATMENT)) +
geom_point() +
ylab("Stability (10 year)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.text = element_text(size=12)) +
labs(fill = "Treatment:") +
theme(legend.title = element_text(size=12)) +
theme(text = element_text(size = 12)) +
guides(color = "none")
ggsave("fig3a_modified.pdf", height = 5, width = 4)
ggsave("fig3a_modified.pdf", height = 5, width = 5)
ggsave("fig3a_modified.pdf", height = 4.5, width = 5)
ggsave("fig3a_modified.pdf", height = 4.5, width = 5.5)
## Modified Fig 4A for Truman
ggplot(mwfigs10, aes(x=Dscore, y=classicVR, color = TREATMENT)) +
geom_point() +
ylab("Variance Ratio (10 yr)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5, show.legend = FALSE) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
annotate("text", x =0.23, y=1.11, label = "synchronous", size = 3.5, fontface = 'italic') +
annotate("text", x =0.23, y=0.92, label = "asynchronous", size = 3.5, fontface = 'italic') +
guides(color = "none")
## Modified Fig 4A for Truman ####
ggplot(mwfigs10, aes(x=Dscore, y=classicVR, color = TREATMENT)) +
geom_point() +
ylab("Variance Ratio (10 yr)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5, show.legend = FALSE) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
annotate("text", x =0.23, y=1.11, label = "synchronous", size = 3.5, fontface = 'italic') +
annotate("text", x =0.23, y=0.92, label = "asynchronous", size = 3.5, fontface = 'italic') +
guides(color = "none")
ggsave("fig4a_modified.pdf", height = 4.5, width = 5.5)
## Modified Fig 4C for Truman ####
ggplot(mwfigs10, aes(x=Dscore, y=popstab, color = TREATMENT)) +
geom_point() +
ylab("Population Stability (10 yr)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=22, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25, color = "gray") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
guides(color = "none")
## Modified Fig 4C for Truman ####
ggplot(mwfigs10, aes(x=Dscore, y=popstab, color = TREATMENT)) +
geom_point() +
ylab("Population Stability (10 yr)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=22, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25, color = "gray") +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12))# +
## Modified Fig 4A for Truman ####
ggplot(mwfigs10, aes(x=Dscore, y=classicVR, color = TREATMENT)) +
geom_point() +
ylab("Variance Ratio (10 yr)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=21, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
annotate("text", x =0.23, y=1.11, label = "synchronous", size = 3.5, fontface = 'italic') +
annotate("text", x =0.23, y=0.92, label = "asynchronous", size = 3.5, fontface = 'italic') +
guides(color = "none")
ggsave("fig4a_modified.pdf", height = 4.5, width = 5.5)
## Modified Fig 4C for Truman ####
ggplot(mwfigs10, aes(x=Dscore, y=popstab, color = TREATMENT)) +
geom_point() +
ylab("Population Stability (10 yr)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=22, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12))# +
## Modified Fig 4C for Truman ####
ggplot(mwfigs10, aes(x=Dscore, y=popstab, color = TREATMENT)) +
geom_point() +
ylab("Population Stability (10 yr)") + xlab("Drought Score") +
geom_point(aes(fill=TREATMENT),
colour="black",pch=22, size=2.5) +
scale_fill_scico_d(palette = "batlow", direction = -1) +
scale_color_scico_d(palette = "batlow", direction = -1) +
theme(legend.position = "right") +
geom_line(stat = "smooth", method = "lm", formula = y~x,
size = 1.25) +
theme(legend.title = element_text(size=12)) +  theme(text = element_text(size = 12)) +
guides(color = "none")
ggsave("fig4c_modified.pdf", height = 4.5, width = 5.5)
